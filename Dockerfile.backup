# Многоэтапная сборка для оптимизации размера
FROM node:18-alpine AS base

# Установка зависимостей для Puppeteer
RUN apk add --no-cache \
	chromium \
	nss \
	freetype \
	freetype-dev \
	harfbuzz \
	ca-certificates \
	ttf-freefont

# Установка переменных окружения для Puppeteer
ENV PUPPETEER_SKIP_CHROMIUM_DOWNLOAD=true \
	PUPPETEER_EXECUTABLE_PATH=/usr/bin/chromium-browser

# Этап сборки фронта
FROM base AS frontend-builder
WORKDIR /app/frontend
COPY frontend/package*.json ./
RUN npm ci --only=production
COPY frontend/ ./
RUN npm run build

# Этап сборки бэкенда
FROM base AS backend-builder
WORKDIR /app/backend
COPY backend/package*.json ./
RUN npm ci --only=production

# Финальный этап
FROM base AS production
WORKDIR /app

# Копируем зависимости бэкенда
COPY --from=backend-builder /app/backend/node_modules ./backend/node_modules
COPY backend/ ./backend/

# Копируем собранный фронт
COPY --from=frontend-builder /app/frontend/dist ./frontend/dist

# Создаем папки для загрузок
RUN mkdir -p backend/uploads backend/uploads/screenshots

# Устанавливаем права
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nodejs -u 1001
RUN chown -R nodejs:nodejs /app
USER nodejs

# Открываем порт
EXPOSE 3000

# Запускаем приложение
CMD ["node", "backend/simple-count-server.js"] 